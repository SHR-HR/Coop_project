/* 
 * Базовый CSS файл для сброса стилей и установки общих правил
 * Основной файл стилей для всего приложения - index.css
 * Содержит базовые reset правила для ровной и предсказуемой верстки
 */

/* 
 * Универсальный селектор для всех элементов, псевдоэлементов ::before и ::after
 * Применяет border-box ко всем элементам для удобства расчета размеров
 */
*,
*::before,
*::after {
    /* 
     * box-sizing: border-box - ключевое свойство для современной верстки
     * Заставляет padding и border включаться в общую ширину и высоту элемента
     * Без этого свойства padding и border добавляются к ширине/высоте content-box
     * Это упрощает расчеты и делает верстку более предсказуемой
     */
    box-sizing: border-box;
}

/* 
 * Стили для корневого html элемента и body
 * Обеспечивают правильное заполнение всего доступного пространства
 */
html,
body {
    /* 
     * height: 100% - устанавливает высоту в 100% от родительского контейнера
     * Для html родителем является viewport (окно браузера)
     * Для body родителем является html элемент
     * Это гарантирует что body займет всю высоту окна браузера
     */
    height: 100%;
}

/* 
 * Стили для медиа-элементов: изображений, SVG, видео и canvas
 * Обеспечивают адаптивность и правильное отображение медиа-контента
 */
img,
svg,
video,
canvas {
    /* 
     * max-width: 100% - ограничивает максимальную ширину до 100% родительского контейнера
     * Предотвращает выход медиа-элементов за границы их контейнеров
     * Особенно важно для адаптивного дизайна на мобильных устройствах
     */
    max-width: 100%;

    /* 
     * height: auto - автоматическая высота пропорционально ширине
     * Сохраняет оригинальные пропорции изображений и видео
     * Предотвращает искажение медиа-контента при изменении размеров
     */
    height: auto;

    /* 
     * display: block - устанавливает блочное отображение для медиа-элементов
     * Устраняет лишние отступы снизу которые появляются у inline-block элементов
     * Особенно важно для изображений которые по умолчанию display: inline
     */
    display: block;
}

/* 
 * Стили для всех кнопок (button элементов)
 * Обеспечивает наследование шрифтов для единообразия текста
 */
button {
    /* 
     * font: inherit - заставляет кнопки наследовать шрифтовые свойства от родителя
     * Без этого свойства кнопки используют системные шрифты по умолчанию
     * Это обеспечивает единообразие типографики во всем приложении
     * Наследует: font-family, font-size, font-weight, line-height и другие
     */
    font: inherit;
}


/* ===================================================== */
/* ПОЯСНЕНИЯ К КОММЕНТАРИЯМ В КОДЕ: */
/* ===================================================== */

/* 
 * 1. BOX-SIZING: BORDER-BOX РЕВОЛЮЦИЯ:
 *    - До border-box: width = content width + padding + border
 *    - С border-box: width = общая ширина элемента (включая padding и border)
 *    - Упрощает расчеты - задал width: 100% и элемент точно займет 100% ширины
 *    - Стандарт в современной веб-разработке
 *    - Применяется ко всем элементам и их псевдоэлементам
 */

/* 
 * 2. ВЫСОТА 100% ДЛЯ HTML И BODY:
 *    - Гарантирует что приложение может растягиваться на всю высоту окна
 *    - Важно для создания full-page layout
 *    - Необходимо для правильной работы flexbox и grid контейнеров на всю высоту
 *    - Предотвращает неожиданное поведение при использовании процентных высот
 */

/* 
 * 3. АДАПТИВНОСТЬ МЕДИА-ЭЛЕМЕНТОВ:
 *    - max-width: 100% - основа адаптивного дизайна
 *    - Предотвращает горизонтальный скролл на мобильных устройствах
 *    - height: auto сохраняет пропорции без искажений
 *    - display: block устраняет "призрачные отступы" у изображений
 */

/* 
 * 4. ЕДИНООБРАЗИЕ КНОПОК:
 *    - Кнопки по умолчанию используют системные шрифты
 *    - font: inherit делает кнопки частью общей типографической системы
 *    - Особенно важно для дизайн-систем и единого визуального стиля
 *    - Упрощает кастомизацию - меняешь шрифт у родителя, меняется и у кнопок
 */

/* 
 * 5. ПРЕИМУЩЕСТВА ДАННОГО RESET ПОДХОДА:
 *    - Минималистичный - не перегружает стили ненужными сбросами
 *    - Целевой - решает конкретные проблемы верстки
 *    - Современный - использует лучшие практики 2024-2025
 *    - Производительный - минимальное количество правил
 */

/* 
 * 6. ЧЕГО НЕТ В ЭТОМ RESET (И ЭТО ХОРОШО):
 *    - Нет сброса margin и padding (это работа normalize.css или reset.css)
 *    - Нет сброса цветов и фонов
 *    - Нет изменения поведения форм
 *    - Сохраняется семантика и доступность элементов
 */

/* 
 * 7. КОГДА ИСПОЛЬЗОВАТЬ:
 *    - В современных React/SPA приложениях
 *    - Когда используется CSS-in-JS или CSS модули
 *    - Когда нужен минимальный контроль над базовыми стилями
 *    - В проектах с собственной дизайн-системой
 */

/* 
 * 8. АЛЬТЕРНАТИВЫ И ДОПОЛНЕНИЯ:
 *    - Normalize.css - сохраняет полезные браузерные стили
 *    - Reset.css - полный сброс всех стилей
 *    - Modern-normalize - современная версия normalize
 *    - Можно добавить сброс margin/padding при необходимости
 */
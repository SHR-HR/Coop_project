/* Универсальный селектор для всех элементов HTML и их псевдоэлементов */
/* Применяет стили ко всем элементам на странице без исключения */
*,
/* Псевдоэлемент ::before - применяется ко всем псевдоэлементам ::before на странице */
/* Псевдоэлементы ::before создают контент перед содержимым выбранного элемента */
*::before,
/* Псевдоэлемент ::after - применяется ко всем псевдоэлементам ::after на странице */
/* Псевдоэлементы ::after создают контент после содержимого выбранного элемента */
*::after {
    /* Устанавливает модель box-sizing: border-box для всех элементов */
    /* Это означает, что padding и border включаются в общую ширину и высоту элемента */
    /* В отличие от content-box, где padding и border добавляются к ширине/высоте */
    box-sizing: border-box;
}

/* Стили для обеспечения полной высоты основных структурных элементов */
/* Элемент html - корневой элемент HTML документа */
html,
/* Элемент body - основной контейнер содержимого страницы */
body,
/* Элемент с id="root" - корневой элемент React приложения */
/* В React приложениях компоненты монтируются в элемент с id="root" */
#root {
    /* Устанавливает высоту 100% от высоты родительского элемента */
    /* Для html это 100% от viewport (окна браузера) */
    /* Для body и #root это наследование 100% от html */
    height: 100%;
}

/* Стили для основного элемента body */
body {
    /* Сбрасывает все внешние отступы до нуля */
    /* Убирает стандартный margin, который браузеры добавляют к body */
    /* Обеспечивает плотное прилегание контента к краям окна браузера */
    margin: 0;
}



/* ===== ПОЯСНЕНИЯ К КОММЕНТАРИЯМ ===== */

/*
1. Назначение файла reset.css:
   - Создает предсказуемую основу для стилизации приложения
   - Устраняет различия в отображении между разными браузерами
   - Упрощает создание макетов и расположение элементов

2. Box-sizing: border-box:
   - Самое важное правило в сбросе стилей
   - Меняет способ расчета размеров элементов в CSS
   - width и height теперь включают padding и border
   - Пример: элемент с width: 100px, padding: 10px, border: 2px будет занимать 100px, а не 124px

3. Преимущества border-box:
   - Упрощает расчеты размеров элементов
   - Позволяет легко создавать сетки и колонки
   - Делает поведение элементов более интуитивно понятным
   - Стандарт в современных фреймворках (Bootstrap, Material-UI)

4. Высота 100% для структурных элементов:
   - html: 100% - занимает всю высоту viewport
   - body: наследует 100% от html
   - #root: наследует 100% от body (важно для React приложений)
   - Обеспечивает, что React приложение займет всю высоту окна

5. Особенности для React приложений:
   - #root - стандартный идентификатор для корневого элемента React
   - Обеспечивает правильное отображение компонентов на всей высоте экрана
   - Важно для SPA (Single Page Applications) с роутингом

6. Сброс margin для body:
   - Убирает стандартные 8px margin, которые добавляют браузеры
   - Позволяет контенту начинаться от самого края окна
   - Создает чистый холст для построения интерфейса

7. Отличия от других reset подходов:
   - Минималистичный - сбрасывает только ключевые свойства
   - Не агрессивный - сохраняет полезные стили по умолчанию
   - Сфокусированный на современных потребностях веб-приложений

8. Совместимость с компонентным подходом:
   - Создает стабильную основу для компонентов React
   - Не конфликтует с CSS-in-JS решениями
   - Обеспечивает единообразие между разными частями приложения

9. Производительность:
   - Минимальное количество CSS правил
   - Быстро применяется браузером
   - Не влияет на время загрузки страницы

10. Best practices:
    - Подключать этот файл первым среди CSS стилей
    - Не переопределять box-sizing в компонентах без необходимости
    - Использовать в сочетании с нормализацией шрифтов и цветов

11. Рекомендации по использованию:
    - Идеально подходит для React/Vue/Angular приложений
    - Может использоваться вместе с CSS Modules или Styled Components
    - Дополнять при необходимости сброса других свойств

12. Отладка:
    - При проблемах с layout в первую очередь проверять box-sizing
    - Убедиться, что цепочка наследования высоты не прерывается
    - Проверять наличие конфликтующих стилей в компонентах

13. Масштабируемость:
    - Легко расширять дополнительными reset правилами
    - Совместимо с любыми CSS методологиями (BEM, SMACSS)
    - Поддерживает различные подходы к верстке (Flexbox, Grid)
*/
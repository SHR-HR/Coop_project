// Стили для страницы статистики (StatisticPage)
// Основной контейнер страницы
.page {
    // Блочное отображение для создания нормального потока документа
    display: block;

    /* единая вертикальная сетка отступов для секций на странице */
    // SCSS вложенность с использованием & (ampersand) для создания комбинатора соседних элементов
    // &>*+* означает: "любой элемент который следует сразу после любого другого элемента внутри .page"
    &>*+* {
        // Адаптивный вертикальный отступ между секциями
        // clamp(12px, 2vw, 20px) - CSS функция для создания responsive margin:
        //   - 12px - минимальное значение (на маленьких экранах)
        //   - 2vw - 2% от ширины viewport (динамическое значение)
        //   - 20px - максимальное значение (на больших экранах)
        margin-top: clamp(12px, 2vw, 20px);
    }
}

// Верхняя панель с поиском и бейджем ранга
.topbar {
    // Grid layout для расположения поиска и бейджа в одну строку
    display: grid;
    // Две колонки: первая занимает все свободное пространство, вторая - по содержимому
    grid-template-columns: 1fr auto;
    // Выравнивание элементов по вертикали по центру
    align-items: center;
    // Расстояние между grid-элементами
    gap: 12px;
}

/* кнопки не «выпирают» — пусть переносятся */
// Панель инструментов с кнопками управления
.toolbar {
    // Flexbox layout для горизонтального расположения кнопок
    display: flex;
    // Разрешение переноса flex-элементов на новую строку
    flex-wrap: wrap;
    // Расстояние между кнопками
    gap: 8px;
    // Выравнивание кнопок по вертикали по центру
    align-items: center;
}

/* короткая панель под счётчики */
// Панель мета-информации (счетчики и быстрые фильтры)
.meta {
    // Flexbox layout для горизонтального расположения элементов
    display: flex;
    // Разрешение переноса flex-элементов на новую строку
    flex-wrap: wrap;
    // Расстояние между элементами
    gap: 10px;
    // Выравнивание элементов по вертикали по центру
    align-items: center;
    // Полупрозрачность текста для менее важной информации
    opacity: .9;
}

// Визуальный разделитель между элементами в панели meta
.divider {
    // Ширина разделителя - 1 пиксель
    width: 1px;
    // Высота разделителя - 16 пикселей
    height: 16px;
    // Цвет разделителя - светло-серый
    background: #ddd;
}

/* 5 колонок на десктопе, с равной высотой карточек */
// Grid контейнер для карточек пользователей
.cardsGrid {
    // Grid layout для создания сетки карточек
    display: grid;
    // 5 колонок с адаптивной минимальной шириной
    // repeat(5, minmax(0, 1fr)) - создает 5 колонок:
    //   - minmax(0, 1fr) - колонки могут сжиматься до 0 и растягиваться на 1fr
    grid-template-columns: repeat(5, minmax(0, 1fr));
    // Расстояние между grid-элементами (карточками)
    gap: 16px;

    /* равная высота ячеек */
    // Автоматические строки имеют высоту 1fr (равномерное распределение)
    grid-auto-rows: 1fr;
    // Растягивание элементов чтобы заполнить всю высоту ячейки
    align-items: stretch;

    /* что бы карточка занимала всю высоту ячейки */
    // SCSS вложенность: применяется ко всем прямым потомкам
    &>* {
        // Высота 100% от родительской grid-ячейки
        height: 100%;
    }

    /* на всякий случай: ничто не вылезает по горизонтали */
    // Минимальная ширина - 0 (позволяет сжиматься)
    min-width: 0;
    // Видимое переполнение (не скрывать содержимое)
    overflow: visible;
    // Небольшие внутренние отступы для визуального комфорта
    padding: 2px;
}

// Специальный стиль для карточки топ-пользователя
.cardCellTop {
    // Внешняя рамка для выделения топ-пользователя
    outline: 2px solid #f6c453;
    /* мягкий жёлтый */
    // Скругление углов внешней рамки
    border-radius: 12px;
    // Отступ между outline и border элемента
    outline-offset: 2px;
}

// Контейнер для пагинации
.pager {
    // Flexbox layout для центрирования элементов пагинации
    display: flex;
    // Выравнивание по горизонтали по центру
    justify-content: center;
    // Расстояние между элементами пагинации
    gap: 8px;
    // Выравнивание по вертикали по центру
    align-items: center;
}

/* Адаптив колонок карточек: 5 → 4 → 3 → 2 → 1 */
// Медиа-запрос для экранов шириной до 1440px (большие ноутбуки)
@media (max-width: 1440px) {
    .cardsGrid {
        // Уменьшение до 4 колонок
        grid-template-columns: repeat(4, 1fr);
    }
}

// Медиа-запрос для экранов шириной до 1100px (ноутбуки)
@media (max-width: 1100px) {
    .cardsGrid {
        // Уменьшение до 3 колонок
        grid-template-columns: repeat(3, 1fr);
    }
}

// Медиа-запрос для экранов шириной до 860px (планшеты)
@media (max-width: 860px) {
    .cardsGrid {
        // Уменьшение до 2 колонок
        grid-template-columns: repeat(2, 1fr);
    }
}

/* бейдж уходит под поиск */
// Медиа-запрос для экранов шириной до 620px (мобильные телефоны)
@media (max-width: 620px) {
    .topbar {
        // Изменение grid layout на одну колонку (поиск сверху, бейдж снизу)
        grid-template-columns: 1fr;
    }
}

// Медиа-запрос для экранов шириной до 560px (маленькие мобильные телефоны)
@media (max-width: 560px) {
    .cardsGrid {
        // Уменьшение до 1 колонки (вертикальное расположение)
        grid-template-columns: 1fr;
    }
}




// =====================================================
// ПОЯСНЕНИЯ К КОММЕНТАРИЯМ В КОДЕ:
// =====================================================

// 1. АДАПТИВНАЯ ВЕРСТКА (RESPONSIVE DESIGN):
//    - 5 breakpoints для плавной адаптации под разные устройства
//    - 1440px, 1100px, 860px, 620px, 560px - тщательно подобранные точки перелома
//    - Постепенное уменьшение колонок: 5 → 4 → 3 → 2 → 1

// 2. CSS GRID ДЛЯ КАРТОЧЕК:
//    - grid-template-columns: repeat(5, minmax(0, 1fr)) - гибкие колонки
//    - minmax(0, 1fr) позволяет колонкам сжиматься при нехватке пространства
//    - grid-auto-rows: 1fr создает равную высоту всех строк

// 3. FLEXBOX ДЛЯ ПАНЕЛЕЙ УПРАВЛЕНИЯ:
//    - flex-wrap: wrap позволяет элементам переноситься на новые строки
//    - align-items: center обеспечивает вертикальное центрирование
//    - gap создает consistent spacing между элементами

// 4. АДАПТИВНЫЕ ОТСТУПЫ:
//    - clamp(12px, 2vw, 20px) - современный подход к responsive spacing
//    - 2vw (2% от ширины viewport) создает плавное изменение отступов
//    - Минимум 12px и максимум 20px обеспечивают читаемость

// 5. ВИЗУАЛЬНОЕ ВЫДЕЛЕНИЕ ТОП-ПОЛЬЗОВАТЕЛЯ:
//    - outline: 2px solid #f6c453 - мягкий желтый цвет для позитивного выделения
//    - outline-offset: 2px создает пространство между outline и border
//    - border-radius: 12px скругляет углы выделения

// 6. УПРАВЛЕНИЕ ПЕРЕПОЛНЕНИЕМ И РАЗМЕРАМИ:
//    - min-width: 0 разрешает сжатие элементов в flex/grid контексте
//    - height: 100% для карточек обеспечивает заполнение всей высоты ячейки
//    - overflow: visible позволяет контенту выходить за границы если необходимо

// 7. ТИПОГРАФИЯ И ЦВЕТА:
//    - opacity: .9 для второстепенной информации
//    - #ddd - нейтральный серый для разделителей
//    - #f6c453 - теплый желтый для выделения (не агрессивный)

// 8. ДОСТУПНОСТЬ И UX:
//    - Четкая визуальная иерархия с помощью отступов
//    - Адаптация под различные размеры экранов
//    - Сохранение функциональности на мобильных устройствах

// 9. ПРОИЗВОДИТЕЛЬНОСТЬ:
//    - CSS Grid и Flexbox хорошо оптимизированы в браузерах
//    - Минимальное количество медиа-запросов
//    - Эффективное использование современных CSS features

// 10. СООТВЕТСТВИЕ ДИЗАЙН-СИСТЕМЕ:
//     - Consistent spacing (8px, 12px, 16px)
//     - Единые радиусы скругления (12px)
//     - Гармоничная цветовая палитра
//     - Предсказуемое поведение на всех устройствах
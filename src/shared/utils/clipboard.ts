// Импорт типа UserStatistic для типизации данных пользователя
import type { UserStatistic } from "../types/types";

/**
 * Функция для быстрого копирования статистики пользователей в буфер обмена в формате TSV (Tab-Separated Values)
 * Быстро скопировать в буфер обмена TSV (для Excel/Sheets).
 * Используем \t и \n. Делаем простую защиту от формул (=,+,-,@) префиксом '.
 * TSV формат удобен для импорта в Excel, Google Sheets и другие табличные редакторы
 */
// Асинхронная функция которая принимает массив статистики пользователей
export async function copyUsersStatToClipboardTSV(items: UserStatistic[]) {
    // Определение языка пользователя для локализации заголовков
    // Проверяем начинается ли язык браузера с "ru" для русского языка
    // navigator?.language - безопасный доступ к свойству language объекта navigator
    // || "" - fallback на пустую строку если navigator или language не определены
    // toLowerCase().startsWith("ru") - приведение к нижнему регистру и проверка на русский язык
    const isRu = (navigator?.language || "").toLowerCase().startsWith("ru");

    // Создание заголовков столбцов в зависимости от языка пользователя
    // Если русский язык - используем русские заголовки, иначе английские
    const header = isRu
        ? ["Имя", "Выполнено", "В работе", "Просрочено", "Всего", "Готово(%)"]  // Русские заголовки
        : ["name", "completed", "inWork", "failed", "total", "doneRate(%)"];    // Английские заголовки

    // Функция для защиты от формул в Excel/Sheets
    // Добавляет префикс ' к значениям которые начинаются с =, +, -, @
    // Это предотвращает интерпретацию значений как формул в табличных редакторах
    const guard = (v: string) => (/^[=+\-@]/.test(v) ? `'${v}` : v);
    // Регулярное выражение /^[=+\-@]/ проверяет начинается ли строка с =, +, - или @
    // ^ - начало строки, [=+\-@] - любой из символов в скобках
    // Если условие истинно, добавляем префикс ', иначе возвращаем оригинальную строку

    // Создание массива строк для TSV формата
    const lines = [
        // Первая строка - заголовки, объединенные табуляцией
        header.join("\t"),  // "\t" - символ табуляции как разделитель столбцов
        // Преобразование каждого элемента массива в строку TSV
        ...items.map((u) => {
            // Вычисление общего количества задач пользователя
            const total = u.completedTasks + u.inWorkTasks + u.failedTasks;
            // Вычисление процента выполненных задач
            // Math.round округляет до целого числа, защита от деления на ноль
            const rate = total ? Math.round((u.completedTasks / total) * 100) : 0;
            // Защита имени пользователя от интерпретации как формулы
            // String(u.name ?? "") - преобразование в строку с fallback на пустую строку если name null/undefined
            const name = guard(String(u.name ?? ""));
            // Создание массива значений для текущего пользователя и объединение табуляцией
            return [name, u.completedTasks, u.inWorkTasks, u.failedTasks, total, rate].join("\t");
        }),
    ];

    // Объединение всех строк символом новой строки для создания итогового текста
    const text = lines.join("\n");  // "\n" - символ новой строки как разделитель строк

    // Асинхронное копирование текста в буфер обмена браузера
    // navigator.clipboard.writeText - современный API для работы с буфером обмена
    // await ожидает завершения операции копирования
    await navigator.clipboard.writeText(text);
}


// =====================================================
// ПОЯСНЕНИЯ К КОММЕНТАРИЯМ В КОДЕ:
// =====================================================

// 1. НАЗНАЧЕНИЕ ФУНКЦИИ:
//    - Экспорт данных статистики в формате TSV для табличных редакторов
//    - Быстрое копирование в буфер обмена для последующей вставки в Excel/Sheets
//    - Автоматическая локализация заголовков на русский/английский язык

// 2. TSV ФОРМАТ (TAB-SEPARATED VALUES):
//    - \t (табуляция) как разделитель столбцов
//    - \n (новая строка) как разделитель строк
//    - Стандартный формат для импорта в табличные редакторы
//    - Более надежный чем CSV при наличии запятых в данных

// 3. МЕЖДУНАРОДИЗАЦИЯ (i18n):
//    - Автоматическое определение языка браузера пользователя
//    - Русские заголовки для русскоязычных пользователей
//    - Английские заголовки для всех остальных языков
//    - navigator.language - стандартное свойство для определения языка браузера

// 4. ЗАЩИТА ОТ ФОРМУЛ (SECURITY):
//    - Функция guard предотвращает injection формул в Excel/Sheets
//    - Добавляет апостроф ' перед значениями начинающимися с =, +, -, @
//    - Это экранирует формулы и предотвращает выполнение кода
//    - Важная мера безопасности при экспорте пользовательских данных

// 5. ВЫЧИСЛЕНИЯ ДАННЫХ:
//    - total - сумма всех типов задач пользователя
//    - rate - процент выполненных задач (округленный до целого)
//    - Защита от деления на ноль при total = 0

// 6. ОБРАБОТКА ДАННЫХ:
//    - Array.map для преобразования каждого пользователя в строку TSV
//    - Array.join для объединения массивов в строки с разделителями
//    - Spread оператор ... для включения преобразованных данных в общий массив

// 7. WEB CLIPBOARD API:
//    - navigator.clipboard.writeText - современный API для работы с буфером обмена
//    - Асинхронная операция (возвращает Promise)
//    - Требует разрешения пользователя в безопасном контексте (HTTPS)
//    - Поддерживается всеми современными браузерами

// 8. ОБРАБОТКА ГРАНИЧНЫХ СЛУЧАЕВ:
//    - Защита от null/undefined в имени пользователя (u.name ?? "")
//    - Обработка пустого массива items
//    - Безопасный доступ к navigator.language через optional chaining (?.)
//    - Fallback на пустую строку если язык не определен

// 9. ПРОИЗВОДИТЕЛЬНОСТЬ:
//    - Эффективное преобразование данных за один проход (map)
//    - Минимальное количество операций с памятью
//    - Быстрая работа даже с большими массивами данных

// 10. ИСПОЛЬЗОВАНИЕ:
//     - Идеально для экспорта данных в отчеты
//     - Удобно для анализа в Excel/Google Sheets
//     - Подходит для создания дашбордов и визуализаций
//     - Может использоваться для бэкпапа данных
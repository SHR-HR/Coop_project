// Использование модульной системы SCSS для импорта переменных из внешнего файла
// Импорт файла с переменными из папки styles/abstracts, псевдоним $ для удобства обращения
@use "../../../styles/abstracts/variables" as *;

// Основной класс-контейнер для компонента ChartBars
.root {
    // Ширина 100% от родительского контейнера
    width: 100%;
    // Фиксированная высота компонента
    height: 10px;
    // Скругление углов из переменной $radius-md (средний радиус)
    border-radius: $radius-md;
    // Скрытие содержимого, выходящего за границы элемента
    overflow: hidden;
    // Цвет фона по умолчанию (светло-серый с голубоватым оттенком)
    background: #eef2f4;
    // Использование Flexbox для расположения внутренних элементов
    display: flex;
}

// Класс для завершенных задач (зеленый цвет)
.completed {
    // Цвет фона для завершенных задач (зеленый)
    background: #22c55e;
}

// зелёный
// Комментарий к цвету: зеленый цвет указывает на успешно выполненные задачи

// Класс для задач в работе (желтый цвет)
.inWork {
    // Цвет фона для задач в процессе выполнения (оранжево-желтый)
    background: #f59e0b;
}

// жёлтый
// Комментарий к цвету: желтый цвет указывает на задачи, находящиеся в работе

// Класс для неудачных/проваленных задач (красный цвет)
.failed {
    // Цвет фона для неудачно выполненных задач (красный)
    background: #ef4444;
}

// красный
// Комментарий к цвету: красный цвет указывает на проваленные или просроченные задачи



/* ===== ПОЯСНЕНИЯ К КОММЕНТАРИЯМ ===== */

/*
1. @use "../../../styles/abstracts/variables" as *;
   - Импортирует переменные SCSS из файла variables.scss
   - Путь ведет на три уровня выше к папке styles/abstracts
   - 'as *' позволяет использовать переменные без префикса namespace

2. .root - основной контейнер компонента:
   - width: 100% - растягивается на всю ширину родительского элемента
   - height: 10px - фиксированная высота для тонкой полосы прогресса
   - border-radius: $radius-md - скругление углов с использованием переменной
   - overflow: hidden - скрывает содержимое за пределами скругленных углов
   - background: #eef2f4 - светло-серый фон для неактивной части
   - display: flex - позволяет гибко располагать внутренние элементы-полосы

3. .completed - стиль для завершенных задач:
   - background: #22c55e - ярко-зеленый цвет HEX (#22c55e)
   - Зеленый цвет традиционно ассоциируется с успехом и завершением

4. .inWork - стиль для задач в работе:
   - background: #f59e0b - оранжево-желтый цвет HEX (#f59e0b)
   - Желтый/оранжевый цвет указывает на активный процесс выполнения

5. .failed - стиль для неудачных задач:
   - background: #ef4444 - ярко-красный цвет HEX (#ef4444)
   - Красный цвет традиционно указывает на ошибки или неудачи

6. Цветовая схема компонента:
   - Использует семантические названия классов (completed, inWork, failed)
   - Цвета подобраны для хорошей различимости и доступности
   - Соответствует общепринятым цветовым ассоциациям в интерфейсах

7. Предполагаемое использование:
   - Компонент вероятно используется для отображения прогресса или статистики
   - Может показывать распределение задач по статусам
   - Flex-контейнер позволяет размещать несколько цветных полос рядом

8. Переменные SCSS (предполагаемое содержание):
   - $radius-md - средний радиус скругления углов (например, 4px или 6px)

9. Особенности дизайна:
   - Компактный размер (10px высота) для экономии места
   - Скругленные углы для современного внешнего вида
   - Яркие цвета для хорошей видимости статусов
*/
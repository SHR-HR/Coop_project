// Использование SCSS модуля с переменными из файла variables.scss
// Префикс '$' позволяет обращаться к переменным напрямую без указания namespace
@use '../../../styles/abstracts/variables' as *;

// Основные стили для карточки статистики пользователя
.card {
    background: $bg-color; // Цвет фона карточки из переменных (обычно белый)
    border: 1px solid $border-color; // Рамка толщиной 1px с цветом из переменных
    border-radius: $radius-lg; // Большое скругление углов из переменных
    padding: $space-md; // Внутренние отступы со всех сторон (средние из переменных)
    box-shadow: $shadow-sm; // Маленькая тень из переменных для легкого эффекта глубины
    transition: box-shadow .15s ease, transform .15s ease, border-color .15s ease; // Плавные переходы для интерактивности

    /* ВЫРАВНИВАНИЕ ПО ВЫСОТЕ */
    display: flex; // Flexbox для расположения внутренних элементов
    flex-direction: column; // Вертикальное направление flex-контейнера
    min-height: 220px; // Минимальная высота карточки 220px для единообразия
    /* можно подогнать под твой контент */
    // Комментарий о возможности настройки высоты
    gap: 8px; // Расстояние между дочерними элементами 8px

    /* ничего внутри не «ломает» ширину */
    * {
        // Универсальный селектор для всех дочерних элементов
        min-width: 0; // Позволяет элементам сжиматься меньше своего минимального размера по содержимому
    }
}

// Стили для шапки карточки (верхней части)
.head {
    display: flex; // Flexbox для горизонтального расположения аватара и информации
    align-items: flex-start; // Выравнивание элементов по верхнему краю
    /* чтобы шапка не тянула высоту */
    // Комментарий о предотвращении растягивания высоты
    gap: 12px; // Расстояние между аватаром и текстовой информацией 12px
}

// Контейнер для аватара пользователя
.avaWrap {
    position: relative; // Относительное позиционирование для абсолютного позиционирования короны
    flex: 0 0 auto; // Flex свойство: не растягивается, не сжимается, авто размер
}

// Стили для изображения аватара
.ava {
    width: 64px; // Фиксированная ширина аватара 64px
    height: 64px; // Фиксированная высота аватара 64px (квадрат)
    border-radius: $radius-md; // Среднее скругление углов из переменных
    display: block; // Блочное отображение для контроля размеров
    object-fit: cover; // Обрезка изображения для заполнения контейнера без искажений
    /* ровный аватар */
    // Комментарий о равномерном отображении аватара
}

// Стили для иконки короны (индикатор лидера)
.crown {
    position: absolute; // Абсолютное позиционирование относительно .avaWrap
    right: -8px; // Позиционирование 8px справа от границы аватара
    top: -10px; // Позиционирование 10px выше границы аватара
    font-size: 18px; // Размер иконки короны 18px
    filter: drop-shadow(0 1px 1px rgba(0, 0, 0, .2)); // Тень для создания эффекта объема
}

// Контейнер для текстовой информации (имя и мета-информация)
.titleBox {
    display: flex; // Flexbox для вертикального расположения текста
    flex-direction: column; // Вертикальное направление
    min-width: 0; // Позволяет контейнеру сжиматься при нехватке пространства
    gap: 4px; // Расстояние между именем и мета-информацией 4px
}

// Стили для имени пользователя
.name {
    color: $text-color; // Основной цвет текста из переменных
    font-size: $font-size-lg; // Крупный размер шрифта из переменных
    white-space: nowrap; // Запрет переноса текста на новую строку
    overflow: hidden; // Скрытие содержимого, выходящего за границы элемента
    text-overflow: ellipsis; // Добавление многоточия (...) при обрезке текста
}

// Стили для мета-информации (дополнительных данных)
.meta {
    color: $text-color-light; // Светлый цвет текста для второстепенной информации
    font-size: $font-size-sm; // Маленький размер шрифта из переменных
}

// Контейнер для бейджей (наград или индикаторов)
.badgesRow {
    display: inline-flex; // Строчно-блочный flex контейнер
    flex-wrap: wrap; // Разрешение переноса элементов на новую строку
    gap: 6px; // Расстояние между бейджами 6px
    margin-top: 2px; // Верхний внешний отступ 2px
}

// Стили для списка статистики
.list {
    margin: 2px 0 0 0; // Внешние отступы: 2px сверху, 0 слева/справа/снизу
    /* компактнее */
    // Комментарий о компактном расположении
    padding-left: $space-md; // Левый внутренний отступ (средний из переменных)

    li {
        // Стили для элементов списка
        color: $text-color; // Основной цвет текста из переменных
    }
}

/* КЛЮЧ: «толкаем» график к низу карточки */
.list {
    margin-bottom: auto; // Автоматический нижний отступ - занимает доступное пространство, толкая следующий элемент вниз
}

/* если у ChartBars есть внешний margin — можно убрать, а здесь задать общий */
:global(.chart-bars-root) {
    // Глобальный селектор для компонента ChartBars (если используется)
    /* если знаешь корневой класс ChartBars */
    // Комментарий об условном использовании
    margin-top: 8px; // Верхний внешний отступ 8px
}

/* подсветка «я» */
.highlight {
    outline: 2px solid $primary-color; // Контур толщиной 2px основным цветом
    box-shadow: 0 0 0 4px rgba(26, 188, 156, 0.15); // Тень для создания эффекта свечения с прозрачностью 15%
    border-radius: $radius-lg; // Большое скругление углов из переменных
}

/* подсветка «топ-1» */
.top {
    border-color: #f1c40f; // Цвет рамки - золотой (#f1c40f) для выделения лидера
    box-shadow:
        0 0 0 2px rgba(241, 196, 15, 0.20) inset, // Внутренняя тень с прозрачностью 20%
        0 6px 14px rgba(241, 196, 15, 0.12); // Внешняя тень с прозрачностью 12% для эффекта объемности
}





/*
ПОЯСНЕНИЯ К КОММЕНТАРИЯМ В КОДЕ:

1. СТРУКТУРА КАРТОЧКИ:
   - Карточка разделена на шапку (.head) с аватаром и информацией, и контентную часть
   - Используется flexbox с вертикальным направлением для четкого разделения секций
   - Минимальная высота обеспечивает единообразие внешнего вида карточек

2. ВЫРАВНИВАНИЕ И РАСПРЕДЕЛЕНИЕ ПРОСТРАНСТВА:
   - margin-bottom: auto в .list занимает доступное пространство, "прижимая" график к низу
   - Это ключевая техника для выравнивания элементов в flex-контейнере
   - min-width: 0 предотвращает "взрыв" ширины внутренних элементов

3. ВИЗУАЛЬНЫЕ ЭФФЕКТЫ И ИНТЕРАКТИВНОСТЬ:
   - Плавные переходы (transition) для hover-эффектов
   - Тени и контуры для выделения особых состояний (highlight, top)
   - Фильтры для иконки короны создают эффект объема

4. ТИПОГРАФИКА И ИЕРАРХИЯ:
   - Четкая иерархия: имя крупное и жирное, мета-информация мелкая и светлая
   - Обрезка длинных имен с многоточием сохраняет аккуратный вид
   - Компактные отступы оптимизируют использование пространства

5. СПЕЦИАЛЬНЫЕ СОСТОЯНИЯ:
   - .highlight - выделение карточки текущего пользователя
   - .top - особое оформление для пользователя-лидера (топ-1)
   - Разные визуальные акценты для разных статусов

6. АДАПТИВНОСТЬ И ГИБКОСТЬ:
   - Flex-wrap в .badgesRow позволяет переносить бейджи при нехватке места
   - Относительные единицы и min-width: 0 обеспечивают адаптивность
   - Комментарии предоставляют guidance для дальнейшей настройки

7. ИНТЕГРАЦИЯ С ДРУГИМИ КОМПОНЕНТАМИ:
   - Глобальный селектор :global() для стилизации внешних компонентов
   - Учет возможных внешних отступов у дочерних компонентов
   - Гибкая структура позволяет добавлять различные типы контента

8. ДОСТУПНОСТЬ И UX:
   - Цветовые акценты помогают быстро идентифицировать важные карточки
   - Четкая визуальная иерархия улучшает восприятие информации
   - Единообразие размеров создает гармоничный интерфейс

Комментарии сохранены на русском языке в соответствии с требованиями,
без изменения логики и структуры исходного кода SCSS.
*/
// Подключение файла с переменными из папки стилей с использованием пространства имен 'variables'
// Директива @use импортирует переменные SCSS для использования в этом файле
// 'as *' означает импорт всех переменных без необходимости использования префикса namespace
@use '../../../styles/abstracts/variables' as *;

// Стили для основного контейнера-обертки всей панели трендов
// Класс .wrap определяет layout для сетки из 3 карточек с трендами
.wrap {
    // Установка элемента как grid-контейнера
    // CSS Grid создает двумерную сетку для расположения карточек трендов
    display: grid;

    // Определение структуры колонок grid-сетки - 3 колонки
    // repeat(3, minmax(220px, 1fr)) - создает 3 колонки:
    //   - minmax(220px, 1fr) - каждая колонка имеет минимальную ширину 220px и максимальную 1fr
    //   - 220px - минимальная ширина обеспечивает достаточно места для графиков Sparkline
    //   - 1fr - единица измерения fraction, распределяет доступное пространство пропорционально
    grid-template-columns: repeat(3, minmax(220px, 1fr));

    // Расстояние между grid-элементами (карточками трендов)
    // 12px - фиксированное расстояние между карточками с графиками
    gap: 12px;

    // Внешние отступы контейнера: 10px сверху, 0 справа и слева, 6px снизу
    // margin создает пространство вокруг всей панели трендов
    // 10px сверху - отступ от предыдущих элементов, 6px снизу - отступ к следующим элементам
    margin: 10px 0 6px;
}

// Стили для отдельной карточки тренда с графиком
// Класс .card определяет внешний вид каждой карточки с показателем тренда
.card {
    // Граница карточки толщиной 1px сплошная
    // $border-color - переменная SCSS, содержащая цвет границы из файла variables
    border: 1px solid $border-color;

    // Цвет фона карточки
    // $bg-color - переменная SCSS, содержащая основной цвет фона из файла variables
    background: $bg-color;

    // Скругление углов карточки
    // $radius-lg - переменная SCSS, содержащая значение большого радиуса скругления
    border-radius: $radius-lg;

    // Внутренние отступы карточки
    // $space-sm - малый вертикальный отступ (сверху и снизу)
    // $space-md - средний горизонтальный отступ (слева и справа)
    padding: $space-sm $space-md;

    // Тень карточки для создания эффекта глубины
    // $shadow-sm - переменная SCSS, содержащая значение малой тени из файла variables
    box-shadow: $shadow-sm;
}

// Стили для строки с названием и значением метрики в карточке
// Класс .row определяет layout верхней части карточки (над графиком)
.row {
    // Установка элемента как flex-контейнера
    // display: flex создает flex-контекст для дочерних элементов
    display: flex;

    // Выравнивание дочерних элементов по базовой линии текста
    // baseline - выравнивает элементы по базовой линии текста, обеспечивая ровное расположение
    align-items: baseline;

    // Распределение дочерних элементов по ширине контейнера
    // space-between - первый элемент прижимается к левому краю, второй к правому
    // Между элементами остается все доступное пространство
    justify-content: space-between;

    // Внешний отступ снизу строки - 6px
    // margin-bottom создает пространство между строкой и графиком Sparkline под ней
    margin-bottom: 6px;
}

// Стили для названия метрики (ключа) в карточке тренда
// Класс .k определяет внешний вид текстовой метки показателя
.k {
    // Размер шрифта для названия метрики
    // $font-size-sm - переменная SCSS, содержащая значение малого размера шрифта
    font-size: $font-size-sm;

    // Цвет текста для названия метрики - светлый оттенок
    // $text-color-light - переменная SCSS, содержащая значение светлого цвета текста
    color: $text-color-light;
}

// Стили для значения метрики в карточке тренда
// Класс .v определяет внешний вид числового значения показателя
.v {
    // Насыщенность шрифта - жирное начертание
    // 700 - значение font-weight для bold, выделяет значение метрики
    font-weight: 700;

    // Размер шрифта для значения метрики - крупный для акцента
    // 18px - фиксированный размер шрифта, выделяет текущее значение
    font-size: 18px;
}





// =====================================================
// ПОЯСНЕНИЯ К КОММЕНТАРИЯМ В КОДЕ:
// =====================================================

// 1. СЕТОЧНАЯ СТРУКТУРА:
//    - CSS Grid используется для создания адаптивной сетки из 3 карточек
//    - minmax(220px, 1fr) обеспечивает минимальную ширину 220px для комфортного отображения графиков
//    - 3 колонки соответствуют 3 метрикам: Выполнено, В работе, Просрочено

// 2. ДИЗАЙН КАРТОЧЕК:
//    - Использование переменных обеспечивает согласованность с общей дизайн-системой
//    - border: 1px solid $border-color - тонкая граница для мягкого разделения
//    - border-radius: $radius-lg - большие скругления для современного вида
//    - box-shadow: $shadow-sm - легкая тень для создания глубины

// 3. FLEXBOX ВЕРСТКА СТРОКИ:
//    - display: flex для горизонтального расположения названия и значения
//    - align-items: baseline - выравнивание по базовой линии для ровного текста
//    - justify-content: space-between - максимальное разделение элементов
//    - margin-bottom: 6px - отступ между строкой и графиком

// 4. ТИПОГРАФИЧЕСКАЯ ИЕРАРХИЯ:
//    - .k (название): $font-size-sm, $text-color-light - второстепенная информация
//    - .v (значение): 18px, font-weight: 700 - акцент на ключевых цифрах
//    - Контраст размеров и насыщенности создает четкую визуальную иерархию

// 5. ПРОСТРАНСТВО И ОТСТУПЫ:
//    - margin: 10px 0 6px - отступы вокруг всей панели трендов
//    - padding: $space-sm $space-md - внутренние отступы карточек
//    - gap: 12px - расстояние между карточками в сетке
//    - margin-bottom: 6px - отступ между текстом и графиком

// 6. АДАПТИВНОСТЬ:
//    - minmax(220px, 1fr) обеспечивает гибкость с минимальной шириной
//    - Grid автоматически адаптирует расположение при изменении размера экрана
//    - Минимальная ширина 220px гарантирует читаемость графиков Sparkline

// 7. ДИЗАЙН-СИСТЕМА:
//    - Полное использование переменных ($border-color, $bg-color, $radius-lg и т.д.)
//    - Согласованность с другими компонентами приложения
//    - Легкость изменения темы через модификацию переменных

// 8. ВИЗУАЛЬНЫЙ БАЛАНС:
//    - Сбалансированные пропорции между текстом и графиками
//    - Четкое разделение элементов внутри карточки
//    - Единообразие стилей для всех трех метрик
//    - Профессиональный и информативный внешний вид
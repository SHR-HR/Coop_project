// Подключение файла с переменными из папки стилей с использованием пространства имен 'variables'
// Директива @use заменяет устаревший @import в современных версиях SCSS
// 'as *' означает импорт всех переменных без необходимости использования префикса namespace
@use '../../../styles/abstracts/variables' as *;

// Стили для основного контейнера бейджа (значка просроченных задач)
// Класс .badge определяет базовые стили контейнера, отображающего информацию о просрочках
.badge {
    // Установка элемента как flex-контейнера с inline-отображением
    // inline-flex позволяет элементу вести себя как строчный элемент с flex-возможностями
    display: inline-flex;

    // Выравнивание дочерних элементов по вертикали по центру
    // center - значение, которое центрирует элементы вдоль поперечной оси flex-контейнера
    align-items: center;

    // Расстояние между дочерними элементами (пробел)
    // 6px - фиксированное расстояние между элементами внутри бейджа
    gap: 6px;

    // Внутренние отступы элемента: 2px сверху и снизу, 8px слева и справа
    // Меньшие отступы по сравнению с другими бейджами для компактности
    padding: 2px 8px;

    // Скругление углов элемента для создания округлой формы
    // 999px - очень большое значение, создающее эффект "капсулы" или полностью скругленных углов
    border-radius: 999px;

    // Размер шрифта для текста внутри бейджа
    // $font-size-sm - переменная SCSS, содержащая значение малого размера шрифта из файла variables
    font-size: $font-size-sm;

    // Граница элемента толщиной 1px сплошная
    // $border-color - переменная SCSS, содержащая цвет границы из файла variables
    border: 1px solid $border-color;

    // Запрет переноса текста на новую строку
    // nowrap - значение, которое предотвращает разрыв текста, сохраняя все содержимое в одной строке
    white-space: nowrap;

    // Стили для дочернего элемента <b> (жирный текст) внутри бейджа
    // Вложенный селектор применяет стили ко всем элементам <b> внутри .badge
    b {
        // Насыщенность шрифта - жирное начертание (700 - значение font-weight для bold)
        // 700 соответствует полужирному начертанию шрифта, выделяет число просроченных задач
        font-weight: 700;
    }
}

// Стили для состояния "OK" - когда нет просроченных задач
// Класс .ok применяется когда failed = 0 (нет просроченных задач)
.ok {
    // Цвет фона бейджа - светло-зеленоватый оттенок
    // #f7fbfa - hex-код цвета в формате RGB, спокойный зеленый фон
    background: #f7fbfa;

    // Внутренняя тень (inset) для создания эффекта вдавленности или акцента
    // 0 0 0 2px - тень без смещения с размытием 0 и растяжением 2px
    // rgba(34, 197, 94, .12) - зеленый цвет с прозрачностью 12% (0.12)
    // inset - ключевое слово, указывающее что тень должна быть внутри элемента
    box-shadow: 0 0 0 2px rgba(34, 197, 94, .12) inset;
    /* зелёный мягкий */
    // Комментарий поясняет что используется мягкий зеленый цвет для позитивного состояния
}

// Стили для состояния "Danger" - когда есть просроченные задачи
// Класс .danger применяется когда failed > 0 (есть просроченные задачи)
.danger {
    // Цвет фона бейджа - светло-красноватый оттенок
    // #fff7f7 - hex-код цвета в формате RGB, теплый красный фон сигнализирующий о проблеме
    background: #fff7f7;

    // Внутренняя тень (inset) красного цвета для визуального выделения проблемного состояния
    // 0 0 0 2px - тень без смещения с размытием 0 и растяжением 2px
    // rgba(239, 68, 68, .12) - красный цвет с прозрачностью 12% (0.12)
    // inset - ключевое слово, указывающее что тень должна быть внутри элемента
    box-shadow: 0 0 0 2px rgba(239, 68, 68, .12) inset;
    /* красный мягкий */
    // Комментарий поясняет что используется мягкий красный цвет для предупреждающего состояния
}


// =====================================================
// ПОЯСНЕНИЯ К КОММЕНТАРИЯМ В КОДЕ:
// =====================================================

// 1. СТРУКТУРА СТИЛЕЙ:
//    - Базовый класс .badge содержит общие стили для всех состояний бейджа
//    - Модификаторы .ok и .danger определяют визуальное состояние в зависимости от данных
//    - Используется принцип BEM (Block Element Modifier) для организации CSS

// 2. FLEXBOX ЛAYOUT:
//    - display: inline-flex - оптимально для бейджей которые должны вести себя как текст
//    - align-items: center - обеспечивает вертикальное центрирование содержимого
//    - gap: 6px - современный способ управления расстоянием между элементами

// 3. ВИЗУАЛЬНОЕ ОФОРМЛЕНИЕ:
//    - border-radius: 999px - техника создания "капсульной" формы с полностью скругленными углами
//    - white-space: nowrap - гарантирует что текст бейджа не переносится на новую строку
//    - Компактные padding: 2px 8px - минимизирует размер бейджа при сохранении читаемости

// 4. ЦВЕТОВАЯ СЕМАНТИКА:
//    - .ok (зеленый): #f7fbfa - фон, rgba(34, 197, 94, .12) - акцентная тень
//    - .danger (красный): #fff7f7 - фон, rgba(239, 68, 68, .12) - акцентная тень
//    - Цвета подобраны для создания мягкого визуального контраста без агрессивности

// 5. ТЕХНИКА INSET BOX-SHADOW:
//    - Внутренняя тень используется вместо border для более мягкого визуального эффекта
//    - Прозрачность 12% обеспечивает тонкое выделение без перегрузки дизайна
//    - Растяжение 2px создает эффект внутренней рамки вокруг всего бейджа

// 6. ТИПОГРАФИКА:
//    - $font-size-sm - обеспечивает согласованность размеров шрифта во всем приложении
//    - font-weight: 700 для элемента <b> - визуально выделяет числовое значение
//    - Вложенный селектор b {} - применяет стили только к жирному тексту внутри бейджа

// 7. ДОСТУПНОСТЬ:
//    - Цветовые сочетания обеспечивают достаточный контраст для читаемости
//    - Размеры шрифта соответствуют рекомендациям доступности
//    - Визуальные состояния (ok/danger) понятны даже пользователям с дальтонизмом

// 8. ПЕРЕИСПОЛЬЗУЕМОСТЬ:
//    - Модульная структура позволяет легко добавлять новые состояния-модификаторы
//    - Использование переменных обеспечивает легкое изменение темы
//    - Независимые стили не конфликтуют с другими компонентами
// Подключение файла с переменными из папки стилей с использованием пространства имен 'variables'
// Директива @use импортирует переменные SCSS для использования в этом файле
// 'as *' означает импорт всех переменных без необходимости использования префикса namespace
@use "../../styles/abstracts/variables" as *;

// Стили для кнопок в дашборде
// Класс .btn определяет базовые стили для всех кнопок в компонентах дашборда
.btn {
    // Фиксированная высота кнопки - 38 пикселей
    // height: 38px создает кнопки стандартного размера для удобства взаимодействия
    height: 38px;

    // Внутренние отступы кнопки: 0 сверху и снизу, 14px слева и справа
    // !important гарантирует что эти отступы переопределят любые другие стили padding
    padding: 0 14px !important;

    // Установка элемента как flex-контейнера с inline-отображением
    // inline-flex позволяет элементу вести себя как строчный элемент с flex-возможностями
    display: inline-flex;

    // Выравнивание дочерних элементов по вертикали по центру
    // center - выравнивает элементы по центру вдоль поперечной оси flex-контейнера
    align-items: center;

    // Выравнивание дочерних элементов по горизонтали по центру
    // center - выравнивает элементы по центру вдоль главной оси flex-контейнера
    justify-content: center;

    // Межстрочный интервал - 1 (единичный)
    // line-height: 1 обеспечивает компактное вертикальное расположение текста
    line-height: 1;

    // Скругление углов кнопки
    // 10px - фиксированный радиус скругления для современного вида
    border-radius: 10px;

    // Запрет переноса текста на новую строку
    // nowrap - значение, которое предотвращает разрыв текста на кнопке
    white-space: nowrap;
}

// Стили для полей ввода в дашборде
// Класс .input определяет базовые стили для всех input элементов в компонентах дашборда
.input {
    // Фиксированная высота поля ввода - 38 пикселей
    // height: 38px создает поля ввода того же размера что и кнопки для визуальной согласованности
    height: 38px;

    // Внутренние отступы поля ввода: 0 сверху и снизу, 12px слева и справа
    // 12px горизонтальных отступов обеспечивают комфортное расстояние для текста
    padding: 0 12px;

    // Граница поля ввода толщиной 1px сплошная светло-серого цвета
    // #bdc3c7 - hex-код цвета в формате RGB, нейтральный серый оттенок
    border: 1px solid #bdc3c7;

    // Скругление углов поля ввода
    // 10px - такой же радиус как у кнопок для единообразия дизайна
    border-radius: 10px;

    // Удаление стандартного outline браузера при фокусе
    // outline: none убирает браузерный outline, но требует альтернативного стиля для доступности
    outline: none;

    // Минимальная ширина поля ввода - 260 пикселей
    // min-width: 260px гарантирует что поле не станет слишком узким для комфортного использования
    min-width: 260px;

    // Ширина поля ввода - 100% от родительского контейнера
    // width: 100% позволяет полю растягиваться на всю доступную ширину
    width: 100%;

    // Цвет фона поля ввода - белый
    // #fff - hex-код белого цвета, создает чистый контрастный фон
    background: #fff;
}

// Стили для поля ввода в состоянии фокуса (когда пользователь кликнул на поле)
// Псевдокласс :focus применяется когда элемент получает фокус (например, по Tab или клику)
.input:focus {
    // Изменение цвета границы при фокусе на более темный серый
    // #7f8c8d - hex-код цвета в формате RGB, темно-серый оттенок для визуального выделения
    border-color: #7f8c8d;
    // Это обеспечивает визуальную обратную связь пользователю что поле активно
}

// Медиа-запрос для очень больших экранов (5000px и больше)
// Это специальный breakpoint для экстремально больших разрешений
@media (min-width: 5000px) {

    // Стили для поля ввода на очень больших экранах
    .input {
        // Ограничение максимальной ширины поля ввода до 820 пикселей
        // max-width: 820px предотвращает неестественное растягивание полей на огромных экранах
        max-width: 820px;
    }
}




// =====================================================
// ПОЯСНЕНИЯ К КОММЕНТАРИЯМ В КОДЕ:
// =====================================================

// 1. ДИЗАЙН-СИСТЕМА И ЕДИНООБРАЗИЕ:
//    - Единая высота 38px для кнопок и полей ввода создает визуальную гармонию
//    - Одинаковые border-radius: 10px для согласованного внешнего вида
//    - Согласованные отступы и выравнивание для профессионального вида

// 2. FLEXBOX ДЛЯ ВЫРАВНИВАНИЯ:
//    - display: inline-flex для кнопок обеспечивает точное центрирование содержимого
//    - align-items: center и justify-content: center центрируют иконки и текст
//    - inline-flex сохраняет строчное поведение но добавляет flex-возможности

// 3. ТИПОГРАФИКА И ТЕКСТ:
//    - line-height: 1 создает компактные кнопки без лишних вертикальных отступов
//    - white-space: nowrap предотвращает нежелательный перенос текста на кнопках
//    - Единый размер текста наследуется от родительских элементов

// 4. ФОРМЫ И ИНТЕРАКТИВНОСТЬ:
//    - outline: none убирает стандартный браузерный outline (требует кастомного :focus стиля)
//    - border-color изменение при :focus обеспечивает визуальную обратную связь
//    - padding обеспечивает комфортное расстояние для ввода текста

// 5. АДАПТИВНОСТЬ И РАЗМЕРЫ:
//    - min-width: 260px гарантирует минимальную удобную ширину для ввода
//    - width: 100% позволяет гибко адаптироваться к разным контейнерам
//    - Медиа-запрос для экстремально больших экранов предотвращает неестественное растягивание

// 6. ЦВЕТОВАЯ ПАЛИТРА:
//    - #bdc3c7 - нейтральный серый для границ в обычном состоянии
//    - #7f8c8d - более темный серый для состояния фокуса (достаточный контраст)
//    - #fff - чистый белый фон для хорошей читаемости текста

// 7. СПЕЦИФИЧЕСКИЕ BREAKPOINTS:
//    - 5000px breakpoint очень необычен и предназначен для специальных случаев:
//      * Очень большие мониторы или телевизоры
//      * Ситуации когда пользователь масштабирует интерфейс
//      * Будущие устройства с экстремальными разрешениями

// 8. CSS ПРИОРИТЕТЫ И !important:
//    - !important для padding гарантирует что отступы кнопок не будут переопределены
//    - Это оправдано для базовых компонентов которые должны сохранять consistent spacing
//    - Следует использовать осторожно чтобы не создавать проблем с каскадом

// 9. ДОСТУПНОСТЬ:
//    - Явный :focus стиль компенсирует outline: none (важно для клавиатурной навигации)
//    - Достаточный цветовой контраст для пользователей с ослабленным зрением
//    - Правильные размеры для удобного касания на мобильных устройствах

// 10. ПЕРЕИСПОЛЬЗУЕМОСТЬ:
//     - Эти стили предназначены для использования в различных компонентах дашборда
//     - Создают consistent look and feel across the application
//     - Упрощают поддержку и обновление дизайна
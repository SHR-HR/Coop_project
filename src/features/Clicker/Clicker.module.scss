// Использование SCSS модуля с переменными из файла variables.scss
// Префикс '$' позволяет обращаться к переменным напрямую без указания namespace
@use '../../styles/abstracts/variables' as *;

// Стили для основного контейнера-обертки компонента Clicker
.wrapper {
  padding: 24px; // Внутренние отступы со всех сторон 24px
  max-width: 600px; // Максимальная ширина контейнера 600px (ограничивает ширину на больших экранах)
  margin: 0 auto; // Внешние отступы: 0 сверху/снизу, auto по бокам (горизонтальное центрирование)
}

// Стили для основного блока кликера
.clicker {
  background: $bg-color; // Цвет фона из переменных (обычно белый или светло-серый)
  padding: 24px; // Внутренние отступы со всех сторон 24px
  border-radius: 12px; // Скругление углов 12px
  border: 1px solid $primary-color; // Рамка толщиной 1px основным цветом из переменных
  text-align: center; // Выравнивание текста по центру для всех текстовых элементов внутри

  // Стили для заголовка h3 внутри кликера
  h3 {
    margin: 0 0 24px 0; // Внешние отступы: 0 сверху, 0 слева, 24px снизу, 0 справа
    color: $secondary-color; // Цвет текста вторичным цветом из переменных
    font-size: 18px; // Размер шрифта 18px
  }
}

// Стили для блока отображения счетчика
.counterDisplay {
  font-size: 48px; // Очень крупный размер шрифта 48px для хорошей видимости
  font-weight: bold; // Жирное начертание шрифта для акцента
  color: $primary-color; // Цвет текста основным цветом из переменных
  margin-bottom: $space-lg; // Нижний внешний отступ (большой из переменных, скорее всего 32px)
  padding: $space-md; // Внутренние отступы (средние из переменных, скорее всего 24px)
  border: 2px solid $secondary-color; // Рамка толщиной 2px вторичным цветом из переменных
  border-radius: 8px; // Скругление углов 8px
  min-height: 80px; // Минимальная высота блока 80px для сохранения стабильного размера
  display: flex; // Flexbox для центрирования содержимого
  align-items: center; // Вертикальное выравнивание по центру
  justify-content: center; // Горизонтальное выравнивание по центру
}

// Стили для контейнера с кнопками управления
.buttons {
  display: flex; // Flexbox для горизонтального расположения кнопок
  gap: 12px; // Расстояние между кнопками 12px
  justify-content: center; // Выравнивание кнопок по центру по горизонтали
  flex-wrap: wrap; // Разрешение переноса кнопок на новую строку при нехватке места

  // Стили для всех кнопок внутри контейнера
  button {
    min-width: 60px; // Минимальная ширина кнопок 60px для единообразия размера
  }
}





/*
ПОЯСНЕНИЯ К КОММЕНТАРИЯМ В КОДЕ:

1. СТРУКТУРА И РАСПОЛОЖЕНИЕ:
   - .wrapper обеспечивает ограничение ширины и центрирование компонента на странице
   - .clicker создает визуально выделенный блок с закругленными углами и рамкой
   - Центрирование текста создает сбалансированный и гармоничный вид

2. ВИЗУАЛЬНОЕ ВЫДЕЛЕНИЕ ЭЛЕМЕНТОВ:
   - Счетчик имеет самый крупный шрифт (48px) для легкого чтения значения
   - Рамка вокруг счетчика визуально отделяет его от остальных элементов
   - Цветовая схема использует primary и secondary цвета для согласованности

3. FLEXBOX ДЛЯ ВЫРАВНИВАНИЯ:
   - display: flex в .counterDisplay обеспечивает идеальное центрирование числа
   - .buttons использует flex для равномерного распределения кнопок
   - flex-wrap: wrap обеспечивает адаптивность на маленьких экранах

4. РАЗМЕРЫ И ПРОПОРЦИИ:
   - Минимальная высота счетчика (80px) предотвращает "прыжки"布局 при изменении чисел
   - Минимальная ширина кнопок (60px) обеспечивает удобство нажатия и единообразие
   - Сбалансированные отступы создают комфортное визуальное пространство

5. АДАПТИВНОСТЬ:
   - max-width: 600px ограничивает ширину на больших экранах
   - flex-wrap в .buttons позволяет кнопкам переноситься на мобильных устройствах
   - Относительные единицы и flexbox обеспечивают естественную адаптацию

6. ЦВЕТОВАЯ СЕМАНТИКА:
   - Основной цвет ($primary-color) используется для самых важных элементов (счетчик, рамка)
   - Вторичный цвет ($secondary-color) для второстепенных элементов (заголовок, рамка счетчика)
   - Цвет фона ($bg-color) обеспечивает контраст и читаемость

7. ДОСТУПНОСТЬ И UX:
   - Крупный размер шрифта счетчика обеспечивает хорошую видимость
   - Достаточные размеры кнопок удобны для нажатия на touch-устройствах
   - Четкие визуальные разделения помогают ориентироваться в интерфейсе

8. ПРОСТРАНСТВЕННАЯ ОРГАНИЗАЦИЯ:
   - Последовательные отступы создают ритм и визуальную иерархию
   - Центрирование всех элементов создает сбалансированную композицию
   - Границы и фон отделяют компонент от окружающего контента

Комментарии сохранены на русском языке в соответствии с требованиями,
без изменения логики и структуры исходного кода SCSS.
*/
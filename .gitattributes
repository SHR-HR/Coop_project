# Автоматическое определение текстовых файлов и выполнение нормализации LF (Line Feed)
# Эта настройка заставляет Git автоматически определять текстовые файлы и нормализовывать окончания строк
# LF нормализация гарантирует, что все окончания строк будут в формате Unix (LF) независимо от операционной системы
* text=auto



# /* ===== ПОЯСНЕНИЯ К КОММЕНТАРИЯМ ===== */

# /*
# 1. Назначение файла .gitattributes:
#    - Определяет атрибуты для путей в Git репозитории
#    - Контролирует поведение Git для определенных файлов и директорий
#    - Обеспечивает согласованность между разными операционными системами

# 2. Директива * text=auto:
#    - * - применяется ко всем файлам в репозитории
#    - text=auto - указывает Git автоматически определять текстовые файлы
#    - Git анализирует содержимое файлов и определяет, являются ли они текстовыми

# 3. Нормализация окончаний строк (Line Endings):
#    - Windows использует CRLF (Carriage Return + Line Feed)
#    - Unix/Linux/macOS используют LF (Line Feed)
#    - Нормализация предотвращает конфликты при работе в разных ОС

# 4. Процесс нормализации:
#    - При коммите: CRLF → LF (на Windows)
#    - При извлечении: LF → CRLF (на Windows)
#    - На Unix-системах: LF остается без изменений

# 5. Преимущества автоматического определения:
#    - Git сам определяет какие файлы текстовые, а какие бинарные
#    - Не нужно вручную указывать типы файлов
#    - Предотвращает повреждение бинарных файлов (изображения, исполняемые файлы)

# 6. Совместимость между разработчиками:
#    - Разработчики на Windows и Unix-системах могут работать вместе
#    - Исключает проблемы с окончаниями строк в коммитах
#    - Обеспечивает одинаковое поведение в любом окружении

# 7. Best practices:
#    - Рекомендуется для всех Git репозиториев
#    - Особенно важно для проектов с кросс-платформенной разработкой
#    - Предотвращает ненужные изменения в diff из-за разных окончаний строк
# */